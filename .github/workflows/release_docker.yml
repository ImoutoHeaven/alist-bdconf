name: build_only

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  # 你也可以添加手动触发选项
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  ARTIFACT_NAME: 'binaries_build'

jobs:
  build_binary:
    name: Build Binaries
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Cache Musl
        id: cache-musl
        uses: actions/cache@v4
        with:
          path: build/musl-libs
          key: docker-musl-libs-v2

      - name: Download Musl Library
        if: steps.cache-musl.outputs.cache-hit != 'true'
        run: bash build.sh prepare docker-multiplatform

      # 始终构建 beta 版本，不管是否是标记的版本
      - name: Build go binary
        run: bash build.sh beta docker-multiplatform

      # 上传构建产物
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          overwrite: true
          path: |
            build/
            !build/*.tgz
            !build/musl-libs/**
      
      # 可选：如果你想让二进制文件在 GitHub 上更容易访问，可以创建一个 release
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/main'
        with:
          name: Latest Build
          tag_name: build-${{ github.run_number }}
          draft: false
          prerelease: true
          files: |
            build/alist-*
            build/dist/**/*
